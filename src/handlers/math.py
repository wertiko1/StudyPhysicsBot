from aiogram import Router, F
from aiogram.filters.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from func import GenTask
import keyboards as kb
from db import Data
from aiogram.types import (
    Message
)

router = Router()
gentask = GenTask()
data = Data()


class MathItems(StatesGroup):
    begin = State()
    math_recurs = State()


@router.message(FormStartMenu.start_cmd, F.text == '–£—Å—Ç–Ω—ã–π —Å—á–µ—Ç')
async def equation_mentally_start(msg: Message, state: FSMContext):
    await state.set_state(MathItems.begin)
    await msg.answer('–í—ã –≥–æ—Ç–æ–≤—ã?', reply_markup=kb.kb_answer)


@router.message(MathItems.begin)
async def math_gettask(msg: Message, state: FSMContext):
    if msg.text == '–î–∞':
        equation = gentask.math_task()
        await msg.answer(f'–†–µ—à–∏ –≤ —É–º–µ\n{equation[0]}', reply_markup=kb.kb_cancel)
        await state.update_data(answer=equation[1], task=equation[0])
        await state.set_state(MathItems.math_recurs)
    elif msg.text == '–ù–µ—Ç':
        await state.set_state(FormStartMenu.start_cmd)
        await msg.answer(f"–ü—Ä–∏–≤–µ—Ç {msg.from_user.username}! üòä")
        await msg.answer("–Ø —Ä–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–±—è! üìöüå±\n"
                         "–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è, —Ñ–æ—Ä–º—É–ª—ã,"
                         " –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –º–∏—Ä —Ñ–∏–∑–∏–∫–∏ –∏ —Ä–∞—Å—à–∏—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è! üìùüí°\n"
                         )
        await msg.answer("–≠—Ç–æ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–∞—è –≤–µ—Ä—Å–∏—è. üöÄ\n–ï—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∏–¥–µ–∏ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è "
                         "–ø–æ —É–ª—É—á—à–µ–Ω–∏—é –º–æ–µ–π —Ä–∞–±–æ—Ç—ã, "
                         "–Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –¥–µ–ª–∏—Ç—å—Å—è –∏–º–∏!\n–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ @wertikomoment."
                         )
        await msg.answer("–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:\n"
                         " ‚óè /start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
                         " ‚óè /cancel - –û—Ç–º–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è\n"
                         "P.S. –∫–æ–º–∞–Ω–¥—É /cancel –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ª—é–±–æ–π –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏",
                         reply_markup=kb.kb_main
                         )
    else:
        await msg.answer('–ß—Ç–æ?')


@router.message(MathItems.math_recurs)
async def math_task(msg: Message, state: FSMContext):
    result = await state.get_data()
    if msg.text.isdigit():
        if int(msg.text) == result['answer']:
            equation = gentask.math_task()
            await msg.answer('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!')
            data.add_stats(msg.from_user.id, 'task1')
            data.add_stats(msg.from_user.id, 'math_task')
            await msg.answer(f'–†–µ—à–∏ –≤ —É–º–µ\n{equation[0]}')
            await state.update_data(answer=equation[1], task=equation[0])
        else:
            result = result['task']
            await msg.answer(f'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –µ—â—ë —Ä–∞–∑\n{result}')
            data.add_stats(msg.from_user.id, 'task1')
    elif msg.text == '–ó–∞–∫–æ–Ω—á–∏—Ç—å':
        await state.set_state(FormStartMenu.start_cmd)
        await msg.answer(f"–ü—Ä–∏–≤–µ—Ç {msg.from_user.username}! üòä")
        await msg.answer("–Ø —Ä–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–±—è! üìöüå±\n"
                         "–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è, —Ñ–æ—Ä–º—É–ª—ã,"
                         " –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –º–∏—Ä —Ñ–∏–∑–∏–∫–∏ –∏ —Ä–∞—Å—à–∏—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è! üìùüí°\n"
                         )
        await msg.answer("–≠—Ç–æ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–∞—è –≤–µ—Ä—Å–∏—è. üöÄ\n–ï—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∏–¥–µ–∏ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è "
                         "–ø–æ —É–ª—É—á—à–µ–Ω–∏—é –º–æ–µ–π —Ä–∞–±–æ—Ç—ã, "
                         "–Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –¥–µ–ª–∏—Ç—å—Å—è –∏–º–∏!\n–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ @wertikomoment."
                         )
        await msg.answer("–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:\n"
                         " ‚óè /start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
                         " ‚óè /cancel - –û—Ç–º–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è\n"
                         "P.S. –∫–æ–º–∞–Ω–¥—É /cancel –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ª—é–±–æ–π –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏",
                         reply_markup=kb.kb_main
                         )
    else:
        await msg.answer('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')


@router.message(MathItems.math_recurs, F.text == '–ó–∞–∫–æ–Ω—á–∏—Ç—å')
async def cmd_cancel(msg: Message, state: FSMContext):
    await state.set_state(FormStartMenu.start_cmd)
    await msg.answer(f"–ü—Ä–∏–≤–µ—Ç {msg.from_user.username}! üòä")
    await msg.answer("–Ø —Ä–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–±—è! üìöüå±\n"
                     "–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è, —Ñ–æ—Ä–º—É–ª—ã,"
                     " –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ —Ä–∞—Å—à–∏—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è! üìùüí°\n"
                     )
    await msg.answer("–≠—Ç–æ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–∞—è –≤–µ—Ä—Å–∏—è. üöÄ\n–ï—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∏–¥–µ–∏ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è "
                     "–ø–æ —É–ª—É—á—à–µ–Ω–∏—é –º–æ–µ–π —Ä–∞–±–æ—Ç—ã, "
                     "–Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –¥–µ–ª–∏—Ç—å—Å—è –∏–º–∏!\n–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ @wertikomoment."
                     )
    await msg.answer("–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:\n"
                     " ‚óè /start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
                     " ‚óè /cancel - –û—Ç–º–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è\n"
                     "P.S. –∫–æ–º–∞–Ω–¥—É /cancel –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ª—é–±–æ–π –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏",
                     reply_markup=kb.kb_main
                     )
