from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from states import FormStartMenu, FormStats
from func import GenTask
import keyboards as kb
from db import Data
from aiogram.types import Message

router = Router()
gentask = GenTask()
data = Data()


@router.message(FormStartMenu.start_cmd, F.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
async def stats(msg: Message, state: FSMContext):
    await state.set_state(FormStartMenu.stats)
    await msg.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª',
                     reply_markup=kb.kb_stats
                     )


@router.message(FormStartMenu.stats, F.text == '–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
async def stats_general(msg: Message, state: FSMContext):
    await state.set_state(FormStats.stats)
    result = data.get_stats(msg.from_user.id)
    flash = result[0][3] + result[0][5] + result[0][7]
    exam = result[0][4] + result[0][6] + result[0][8]
    procent = data.get_users_proc(msg.from_user.id)
    await msg.answer(f"–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
                     f"–í—Å–µ–≥–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {flash}\n"
                     f"–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: {exam}\n"
                     f"–£—Å—Ç–Ω—ã–π —Å—á–µ—Ç: {result[0][2]}\n"
                     f"–≠—Ç–æ –Ω–∞ {procent}% –ª—É—á—à–µ —á–µ–º —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                     reply_markup=kb.kb_cncl
                     )


@router.message(FormStartMenu.stats, F.text == '–¢–µ—Å—Ç—ã')
async def stats_exam(msg: Message, state: FSMContext):
    await state.set_state(FormStats.stats)
    result = data.get_stats(msg.from_user.id)
    s = result[0][4] + result[0][6] + result[0][8]
    await msg.answer(f'–¢–µ—Å—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ {s}\n'
                     f'–¢–µ—Å—Ç–æ–≤ –ø–æ –ø—Ä–∏–±–æ—Ä–∞–º {result[0][10]}/{result[0][4]}\n'
                     f'–¢–µ—Å—Ç–æ–≤ –ø–æ —É—á–µ–Ω—ã–º {result[0][12]}/{result[0][6]}\n'
                     f'–¢–µ—Å—Ç–æ–≤ –ø–æ —Ñ–æ—Ä–º—É–ª–∞–º {result[0][11]}/{result[0][8]}\n'
                     f'–ü—Ä–∞–≤–∏–ª—å–Ω–æ/–í—Å–µ–≥–æ',
                     reply_markup=kb.kb_cncl)


@router.message(FormStartMenu.stats, F.text == '–ö–∞—Ä—Ç–æ—á–∫–∏')
async def stats_flash(msg: Message, state: FSMContext):
    await state.set_state(FormStats.stats)
    result = data.get_stats(msg.from_user.id)
    s = result[0][3] + result[0][5] + result[0][7]
    await msg.answer(f'–í—Å–µ–≥–æ –∫–∞—Ä—Ç–æ—á–µ–∫ {s}\n'
                     f'–ö–∞—Ä—Ç–æ—á–µ–∫ –ø–æ –ø—Ä–∏–±–æ—Ä–∞–º {result[0][3]}\n'
                     f'–ö–∞—Ä—Ç–æ—á–µ–∫ –ø–æ —É—á–µ–Ω—ã–º {result[0][5]}\n'
                     f'–ö–∞—Ä—Ç–æ—á–µ–∫ –ø–æ —Ñ–æ—Ä–º—É–ª–∞–º {result[0][7]}',
                     reply_markup=kb.kb_cncl)


@router.message(FormStartMenu.stats, F.text == '–£—Å—Ç–Ω—ã–π —Å—á–µ—Ç')
async def stats_math(msg: Message, state: FSMContext):
    await state.set_state(FormStats.stats)
    results = data.get_stats(msg.from_user.id)
    await msg.answer(f'–ü–æ–ø—ã—Ç–æ–∫ {results[0][9]}\n'
                     f'–†–µ—à–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ {results[0][2]}',
                     reply_markup=kb.kb_cncl)


@router.message(FormStats.stats, F.text == '–û—Ç–º–µ–Ω–∞')
async def cmd_cancel(msg: Message, state: FSMContext):
    await state.set_state(FormStartMenu.stats)
    await msg.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª',
                     reply_markup=kb.kb_stats
                     )


@router.message(FormStartMenu.stats, F.text == '–û—Ç–º–µ–Ω–∞')
async def cmd_cancel(msg: Message, state: FSMContext):
    await state.set_state(FormStartMenu.start_cmd)
    await msg.answer(f"–ü—Ä–∏–≤–µ—Ç {msg.from_user.username}! üòä")
    await msg.answer("–Ø —Ä–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–±—è! üìöüå±\n"
                     "–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è, —Ñ–æ—Ä–º—É–ª—ã,"
                     " –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –º–∏—Ä —Ñ–∏–∑–∏–∫–∏ –∏ —Ä–∞—Å—à–∏—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è! üìùüí°\n"
                     )
    await msg.answer("–≠—Ç–æ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–∞—è –≤–µ—Ä—Å–∏—è. üöÄ\n–ï—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∏–¥–µ–∏ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è "
                     "–ø–æ —É–ª—É—á—à–µ–Ω–∏—é –º–æ–µ–π —Ä–∞–±–æ—Ç—ã, "
                     "–Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –¥–µ–ª–∏—Ç—å—Å—è –∏–º–∏!\n–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ @wertikomoment."
                     )
    await msg.answer("–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:\n"
                     " ‚óè /start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
                     " ‚óè /cancel - –û—Ç–º–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è\n"
                     "P.S. –∫–æ–º–∞–Ω–¥—É /cancel –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ª—é–±–æ–π –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏",
                     reply_markup=kb.kb_main
                     )
